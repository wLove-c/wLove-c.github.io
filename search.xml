<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>数组方法的扩展:array.every()和array.some()</title>
      <link href="/2019/03/29/cosing-4/"/>
      <url>/2019/03/29/cosing-4/</url>
      
        <content type="html"><![CDATA[<p>从字面认知:every是每一个都，some是都有一些就~~<br>即:</p><ol><li>every():方法用于检测数组中所有元素是否都符合指定条件，若符合返回true，否则返回false；</li><li>some():方法用于检测数组中的元素是否有满足指定条件的，若满足返回true，否则返回false；</li></ol><h2 id="every"><a href="#every" class="headerlink" title="every()"></a>every()</h2><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// every():方法用于检测数组中所有元素是否都符合指定条件，若符合返回true，否则返回false,且程序不会继续往下执行；</span>array<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span>index<span class="token punctuation">,</span>array）<span class="token punctuation">{</span>                 <span class="token comment" spellcheck="true">// item:当前元素的值；</span>                 <span class="token comment" spellcheck="true">// index:当前元素的索引；</span>                 <span class="token comment" spellcheck="true">// array:当前元素的数组对象；</span>         <span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><h4 id="例子"><a href="#例子" class="headerlink" title="例子:"></a>例子:</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//es6</span><span class="token keyword">let</span> age <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">26</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">// 所有都满足才会返回true,否则返回false;</span> <span class="token keyword">let</span> result <span class="token operator">=</span> age<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span>index<span class="token punctuation">,</span>array<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 10</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 0</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//[10,20,30,40,50,22,26]</span>     <span class="token keyword">return</span> item <span class="token operator">></span> <span class="token number">22</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// es5</span><span class="token comment" spellcheck="true">// let result = age.every(function(item,index,array){</span><span class="token comment" spellcheck="true">//     return item > 22;</span><span class="token comment" spellcheck="true">//     })</span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// false</span></code></pre><h2 id="some"><a href="#some" class="headerlink" title="some()"></a>some()</h2><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// some():方法用于检测数组中是否有元素符合指定条件，若有符合的返回true，且程序不会继续往下执行；否则返回false；</span>array<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span>index<span class="token punctuation">,</span>array）<span class="token punctuation">{</span>                 <span class="token comment" spellcheck="true">// item:当前元素的值；</span>                 <span class="token comment" spellcheck="true">// index:当前元素的索引；</span>                 <span class="token comment" spellcheck="true">// array:当前元素的数组对象；</span>         <span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><h4 id="例子-1"><a href="#例子-1" class="headerlink" title="例子:"></a>例子:</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//es6</span><span class="token keyword">let</span> age <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">26</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">// 所有都满足才会返回true,否则返回false;</span> <span class="token keyword">let</span> result <span class="token operator">=</span> age<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span>index<span class="token punctuation">,</span>array<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 10 20 30</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 0 1 2</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//[10,20,30,40,50,22,26]</span>     <span class="token keyword">return</span> item <span class="token operator">></span> <span class="token number">22</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// es5</span><span class="token comment" spellcheck="true">// let result = age.some(function(item,index,array){</span><span class="token comment" spellcheck="true">//     return item > 22;</span><span class="token comment" spellcheck="true">//     })</span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// true</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue前端代码规范</title>
      <link href="/2019/02/26/coding-3/"/>
      <url>/2019/02/26/coding-3/</url>
      
        <content type="html"><![CDATA[<p>使用vue的这两年中，除了部分公司有比较好的代码规范外，也形成了一套自己的编程习惯；<br>持续更新</p><section class="post-content"><br>            <p><strong>一、JavaScript命名规范</strong></p><br><br><pre><code>1､命名统一使用语义化的驼峰命名法，能表达出该命名的用义<br></code></pre><br><br><p>例：主页的头部命名组件为header,列表详情下抽出的用户头部，应以userHeader命名，不能叫header </p><br><br><p><strong>二、CSS命名规范</strong></p><br><br><pre><code>1.命名统一使用语义化的驼峰命名法，对于过长的双或多英文单词组成的命名， 使用“-”链接，实在太长的，取每个单词的前3字母 + “-”链接（不绝对取前3 字母，根据语义取字母）。<br>2.设置相同属性的，使用面向属性命名方法，如：都是设置字体相关属性的，以该属性命名<br>     .fs {<br>            font: italic bold 12px/24px “Microsoft YaHei”;<br>    }<br>3.共用，又设置了不同属性的。以public的pub开头 + 语义化名称，如：页面 有多个店铺icon图标，有共同的和不同的样式，共同（重用）的样式命名方法为：<br>      .pub-shopIcon {<br>                   width:12px;<br>                   height:12px;<br>                   float:left;<br>                   position:relative;<br>                   left:0;<br>                   top:0;<br>               }<br></code></pre><br><br><p><strong>三、 Vue 目录结构</strong></p><br><br><p>1.assets用来放置样式、静态图片，只要src下面的组件中用到的资源就放在assets中。 <br><br>2.static用来放没有npm包的第三方插件，字体文件。 <br><br>3.assets与components同级 components下的.vue引用静态文件时，相对路径为 ../assets/wapFront <br><br><code><br>├── README.md              // 用到的插件和其他项目注意点在这里标明<br>├── build<br>│   ├── build.js<br>│   ├── check-versions.js<br>│   ├── logo.png<br>│   ├── utils.js<br>│   ├── vue-loader.conf.js<br>│   ├── webpack.base.conf.js<br>│   ├── webpack.dev.conf.js<br>│   └── webpack.prod.conf.js<br>├── config<br>│   ├── dev.env.js<br>│   ├── index.js<br>│   └── prod.env.js<br>├── index.html<br>├── package.json<br>├── src<br>│   ├── App.vue<br>│   ├── api               // 抽出的axios 接口请求配置<br>│   ├── assets            //  图片和公用样式<br>│   ├── components        //  公用组件<br>│   ├── directives        //  vue 指令<br>│   ├── filters           //  vue过滤器<br>│   ├── main.js<br>│   ├── router            //  路由<br>│   ├── store<br>│   ├── utils             // 工具<br>│   └── views             // 业务页面<br>└── static                // 没有npm包的第三方插件<br></code></p><br>        </section>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo 的介绍和使用</title>
      <link href="/2019/02/26/hello-world/"/>
      <url>/2019/02/26/hello-world/</url>
      
        <content type="html"><![CDATA[<p>欢迎来到 <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! 这是我的第一个发布. 通过观看 <a href="https://hexo.io/docs/" target="_blank" rel="noopener">hexo文档</a> 获取更多信息. 如果你在使用hexo的过程中遇到什么问题, 你可以从这里找到一些答案 <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">问题解决</a> 或者你也可以在github寻求帮助 <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post-（创建新文章）"><a href="#Create-a-new-post-（创建新文章）" class="headerlink" title="Create a new post （创建新文章）"></a>Create a new post （创建新文章）</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server-（运行）"><a href="#Run-server-（运行）" class="headerlink" title="Run server （运行）"></a>Run server （运行）</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files-（生成静态文件）"><a href="#Generate-static-files-（生成静态文件）" class="headerlink" title="Generate static files （生成静态文件）"></a>Generate static files （生成静态文件）</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites-（部署到远程站点）"><a href="#Deploy-to-remote-sites-（部署到远程站点）" class="headerlink" title="Deploy to remote sites （部署到远程站点）"></a>Deploy to remote sites （部署到远程站点）</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CSS垂直居中的几种方法</title>
      <link href="/2019/02/26/coding-1/"/>
      <url>/2019/02/26/coding-1/</url>
      
        <content type="html"><![CDATA[<p>CSS垂直居中的几种方法</p><p>@<a href="CSS垂直居中的几种方法">TOC</a></p><h3 id="假设HTML如下"><a href="#假设HTML如下" class="headerlink" title="假设HTML如下:"></a>假设HTML如下:</h3><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre><h3 id="1-兼容性最好的方法-IE7以上"><a href="#1-兼容性最好的方法-IE7以上" class="headerlink" title="1. 兼容性最好的方法 IE7以上"></a>1. 兼容性最好的方法 IE7以上</h3><pre class=" language-javascript"><code class="language-javascript">body<span class="token punctuation">,</span>html <span class="token punctuation">{</span> margin<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> width<span class="token punctuation">:</span><span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span> height<span class="token punctuation">:</span><span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>#box <span class="token punctuation">{</span>     width<span class="token punctuation">:</span><span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>     height<span class="token punctuation">:</span><span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>     background<span class="token punctuation">:</span><span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0.7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     position<span class="token punctuation">:</span>relative<span class="token punctuation">;</span> <span class="token punctuation">}</span>#content <span class="token punctuation">{</span>    width<span class="token punctuation">:</span><span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">;</span>    height<span class="token punctuation">:</span><span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">;</span>    background<span class="token punctuation">:</span>pink<span class="token punctuation">;</span>    position<span class="token punctuation">:</span>absolute<span class="token punctuation">;</span>    top<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span>    right<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span>    bottom<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span>    left<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span>    margin<span class="token punctuation">:</span>auto<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="2-transform进行元素偏移-IE8以上"><a href="#2-transform进行元素偏移-IE8以上" class="headerlink" title="2. transform进行元素偏移 IE8以上"></a>2. transform进行元素偏移 IE8以上</h3><pre class=" language-javascript"><code class="language-javascript">body<span class="token punctuation">,</span>html <span class="token punctuation">{</span> margin<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> width<span class="token punctuation">:</span><span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span> height<span class="token punctuation">:</span><span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>#box <span class="token punctuation">{</span>    width<span class="token punctuation">:</span><span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>    height<span class="token punctuation">:</span><span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>    background<span class="token punctuation">:</span><span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0.7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    position<span class="token punctuation">:</span>relative<span class="token punctuation">;</span><span class="token punctuation">}</span>#content<span class="token punctuation">{</span>    position<span class="token punctuation">:</span>absolute<span class="token punctuation">;</span>    width<span class="token punctuation">:</span><span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">;</span>    height<span class="token punctuation">:</span><span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">;</span>    background<span class="token punctuation">:</span>blue<span class="token punctuation">;</span>    left<span class="token punctuation">:</span><span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">;</span>    top<span class="token punctuation">:</span><span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">;</span>    transform<span class="token punctuation">:</span><span class="token function">translateX</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">)</span> <span class="token function">translateY</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">-</span>webkit<span class="token operator">-</span>transform<span class="token punctuation">:</span><span class="token function">translateX</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">)</span> <span class="token function">translateY</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="3-弹性盒模型进行布局-IE兼容性差"><a href="#3-弹性盒模型进行布局-IE兼容性差" class="headerlink" title="3. 弹性盒模型进行布局 IE兼容性差"></a>3. 弹性盒模型进行布局 IE兼容性差</h3><pre class=" language-javascript"><code class="language-javascript">body<span class="token punctuation">,</span>html <span class="token punctuation">{</span> margin<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> width<span class="token punctuation">:</span><span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span> height<span class="token punctuation">:</span><span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>#box <span class="token punctuation">{</span>    width<span class="token punctuation">:</span><span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>    height<span class="token punctuation">:</span><span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>    background<span class="token punctuation">:</span><span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0.7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    display<span class="token punctuation">:</span>box<span class="token punctuation">;</span>    box<span class="token operator">-</span>pack<span class="token punctuation">:</span>center<span class="token punctuation">;</span>    box<span class="token operator">-</span>align<span class="token punctuation">:</span>center<span class="token punctuation">;</span>    display<span class="token punctuation">:</span><span class="token operator">-</span>webkit<span class="token operator">-</span>flexbox<span class="token punctuation">;</span>    <span class="token operator">-</span>webkit<span class="token operator">-</span>box<span class="token operator">-</span>pack<span class="token punctuation">:</span>center<span class="token punctuation">;</span>    <span class="token operator">-</span>webkit<span class="token operator">-</span>box<span class="token operator">-</span>align<span class="token punctuation">:</span>center<span class="token punctuation">;</span><span class="token punctuation">}</span>#content <span class="token punctuation">{</span>    width<span class="token punctuation">:</span><span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">;</span>    height<span class="token punctuation">:</span><span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">;</span>    background<span class="token punctuation">:</span>blue<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="4-flex布局-不兼容IE9以下"><a href="#4-flex布局-不兼容IE9以下" class="headerlink" title="4. flex布局 不兼容IE9以下"></a>4. flex布局 不兼容IE9以下</h3><pre class=" language-javascript"><code class="language-javascript">body<span class="token punctuation">,</span>html <span class="token punctuation">{</span> margin<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> width<span class="token punctuation">:</span><span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span> height<span class="token punctuation">:</span><span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>#box <span class="token punctuation">{</span>    width<span class="token punctuation">:</span><span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>    height<span class="token punctuation">:</span><span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>    background<span class="token punctuation">:</span><span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0.7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    display<span class="token punctuation">:</span>flex<span class="token punctuation">;</span>    display<span class="token punctuation">:</span><span class="token operator">-</span>webkit<span class="token operator">-</span>flex<span class="token punctuation">;</span>     justify<span class="token operator">-</span>content<span class="token punctuation">:</span>center<span class="token punctuation">;</span>     align<span class="token operator">-</span>items<span class="token punctuation">:</span>center<span class="token punctuation">;</span>  <span class="token punctuation">}</span>#content <span class="token punctuation">{</span>    position<span class="token punctuation">:</span>absolute<span class="token punctuation">;</span>    width<span class="token punctuation">:</span><span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">;</span>    height<span class="token punctuation">:</span><span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">;</span>    background<span class="token punctuation">:</span>blue<span class="token punctuation">;</span>  <span class="token punctuation">}</span></code></pre><h5 id="言-以上就是博主目前用的比较多的方法啦，如果有什么更好的方法，可以多多交流喔"><a href="#言-以上就是博主目前用的比较多的方法啦，如果有什么更好的方法，可以多多交流喔" class="headerlink" title="言: 以上就是博主目前用的比较多的方法啦，如果有什么更好的方法，可以多多交流喔"></a>言: 以上就是博主目前用的比较多的方法啦，如果有什么更好的方法，可以多多交流喔</h5>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue项目下props传进去的数据,生命周期勾子函数包括watch不触发的解决办法</title>
      <link href="/2019/02/26/coding-2/"/>
      <url>/2019/02/26/coding-2/</url>
      
        <content type="html"><![CDATA[<p>vue项目下props传进去的数据,生命周期勾子函数包括watch不触发的解决办法<br>@<a href="vue项目下props传进去的数据,生命周期勾子函数包括watch不触发的解决办法">TOC</a></p><h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><p> 在深层props过程中，props的数据传到了目标文件 但却没有触发数据更新及页面更新；<br> watch代码如下：</p><pre class=" language-javascript"><code class="language-javascript">  watch<span class="token punctuation">:</span> <span class="token punctuation">{</span>  <span class="token function">uploaConfig</span><span class="token punctuation">(</span>newVal<span class="token punctuation">,</span>oldVal<span class="token punctuation">)</span><span class="token punctuation">{</span>   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>uploadConfig<span class="token punctuation">.</span>moreList <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>uploadConfig<span class="token punctuation">.</span>moreList<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>moreList <span class="token operator">=</span> newVal<span class="token punctuation">.</span>moreList          <span class="token punctuation">}</span>      <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span></code></pre><p>vue-devToola数据传递结果如下<br><img src="https://img-blog.csdnimg.cn/20190131173426486.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDc1NTY4OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="方案解决过程一"><a href="#方案解决过程一" class="headerlink" title="方案解决过程一"></a>方案解决过程一</h4><p>考虑到使用了对象传递 watch可能无法检测到深层key属性变化，代码改成如下:</p><pre class=" language-javascript"><code class="language-javascript"> watch<span class="token punctuation">:</span> <span class="token punctuation">{</span>     <span class="token string">'uploaConfig.moreList'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>          handler <span class="token punctuation">(</span>newVal<span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>uploadConfig<span class="token punctuation">.</span>moreList <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>uploadConfig<span class="token punctuation">.</span>moreList<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token keyword">this</span><span class="token punctuation">.</span>moreList <span class="token operator">=</span> newVal<span class="token punctuation">.</span>moreList              <span class="token punctuation">}</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span>          deep<span class="token punctuation">:</span> <span class="token boolean">true</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span></code></pre><p>结果显而易见 还是不行；</p><h4 id="方案解决过程二"><a href="#方案解决过程二" class="headerlink" title="方案解决过程二"></a>方案解决过程二</h4><p>查阅: <a href="https://cn.vuejs.org/v2/api/#watch" target="_blank" rel="noopener">vue官方文档</a>.得知如果是想watch检测到值变化并且立刻使用则需要加上 immediate: true,</p><pre class=" language-javascript"><code class="language-javascript">watch<span class="token punctuation">:</span> <span class="token punctuation">{</span>        <span class="token string">'uploaConfig.moreList'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>          handler <span class="token punctuation">(</span>newVal<span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>uploadConfig<span class="token punctuation">.</span>moreList <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>uploadConfig<span class="token punctuation">.</span>moreList<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token keyword">this</span><span class="token punctuation">.</span>moreList <span class="token operator">=</span> newVal<span class="token punctuation">.</span>moreList              <span class="token punctuation">}</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span>          deep<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>          immediate<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span></code></pre><p>最后博主问题终于得到解决了<br><img src="https://img-blog.csdnimg.cn/20190131175046627.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDc1NTY4OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结:"></a>总结:</h2><p>出现问题尽量先找官网 首先确定是自己没有了解到官方api的正确使用或者是一些特定解决方案，如若对您有帮助，麻烦点个赞吧~</p><h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢~"></a>感谢~</h2><p>谢谢大家 麻烦给个关注 ^ _ ^</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
